/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	eval("(function(window) {\n  'use strict';\n\n  window.site = __webpack_require__(1);\n\n})(window);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/src/bundle.js\n ** module id = 0\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./js/src/bundle.js?");

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(process) {var select = __webpack_require__(3);\n\nselect('body')\n  .style('color', 'white')\n  .style('background-color', 'black');\n\nselect('#env').text(process.env.NODE_ENV || '?');\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/src/site.js\n ** module id = 1\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./js/src/site.js?");

/***/ },
/* 2 */
/***/ function(module, exports) {

	eval("// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/process/browser.js\n ** module id = 2\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///(webpack)/~/node-libs-browser/~/process/browser.js?");

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	eval("(function (global, factory) {\n   true ? factory(exports) :\n  typeof define === 'function' && define.amd ? define('d3-selection', ['exports'], factory) :\n  factory((global.d3_selection = {}));\n}(this, function (exports) { 'use strict';\n\n  var requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\n  function requote(string) {\n    return string.replace(requoteRe, \"\\\\$&\");\n  }\n\n  function noop() {}\n\n  var filterEvents = {};\n\n  exports.event = null;\n\n  if (typeof document !== \"undefined\") {\n    var element = document.documentElement;\n    if (!(\"onmouseenter\" in element)) {\n      filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n    }\n  }\n\n  function contextListener(listener, index, group) {\n    return function(event1) {\n      var event0 = exports.event; // Events can be reentrant (e.g., focus).\n      exports.event = event1;\n      try {\n        listener.call(this, this.__data__, index, group);\n      } finally {\n        exports.event = event0;\n      }\n    };\n  }\n\n  function filterListener(listener) {\n    return function(event) {\n      var related = event.relatedTarget;\n      if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n        listener(event);\n      }\n    };\n  }\n\n  function onRemove(key, type) {\n    return function() {\n      var l = this[key];\n      if (l) {\n        this.removeEventListener(type, l, l._capture);\n        delete this[key];\n      }\n    };\n  }\n\n  function onRemoveAll(dotname) {\n    var re = new RegExp(\"^__on([^.]+)\" + requote(dotname) + \"$\");\n    return function() {\n      for (var key in this) {\n        var match = key.match(re);\n        if (match) {\n          var l = this[key];\n          this.removeEventListener(match[1], l, l._capture);\n          delete this[key];\n        }\n      }\n    };\n  }\n\n  function onAdd(filter, key, type, listener, capture) {\n    return function(d, i, group) {\n      var value = this[key];\n      if (value) this.removeEventListener(type, value, value._capture);\n      value = contextListener(listener, i, group);\n      if (filter) value = filterListener(value);\n      value._listener = listener;\n      this.addEventListener(type, this[key] = value, value._capture = capture);\n    };\n  }\n\n  function selection_on(type, listener, capture) {\n    var value,\n        name = type + \"\",\n        key = \"__on\" + name,\n        filter;\n\n    if (arguments.length < 2) return (value = this.node()[key]) && value._listener;\n    if ((value = name.indexOf(\".\")) > 0) name = name.slice(0, value);\n    if (filter = filterEvents.hasOwnProperty(name)) name = filterEvents[name];\n\n    return this.each(listener\n        ? (value ? onAdd(filter, key, name, listener, capture == null ? false : capture) : noop) // Attempt to add untyped listener is ignored.\n        : (value ? onRemove(key, name) : onRemoveAll(name)));\n  }\n\n  function sourceEvent() {\n    var current = exports.event, source;\n    while (source = current.sourceEvent) current = source;\n    return current;\n  }\n\n  function defaultView(node) {\n    return node\n        && ((node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n            || (node.document && node) // node is a Window\n            || node.defaultView); // node is a Document\n  }\n\n  function dispatchEvent(node, type, params) {\n    var window = defaultView(node),\n        event = window.CustomEvent;\n\n    if (event) {\n      event = new event(type, params);\n    } else {\n      event = window.document.createEvent(\"Event\");\n      if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n      else event.initEvent(type, false, false);\n    }\n\n    node.dispatchEvent(event);\n  }\n\n  function dispatchConstant(type, params) {\n    return function() {\n      return dispatchEvent(this, type, params);\n    };\n  }\n\n  function dispatchFunction(type, params) {\n    return function() {\n      return dispatchEvent(this, type, params.apply(this, arguments));\n    };\n  }\n\n  function selection_dispatch(type, params) {\n    return this.each((typeof params === \"function\"\n        ? dispatchFunction\n        : dispatchConstant)(type, params));\n  }\n\n  function selection_datum(value) {\n    return arguments.length\n        ? this.property(\"__data__\", value)\n        : this.node().__data__;\n  }\n\n  function remove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n\n  function selection_remove() {\n    return this.each(remove);\n  }\n\n  var namespaces = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n\n  function namespace(name) {\n    var prefix = name += \"\", i = prefix.indexOf(\":\");\n    if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n    return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n  }\n\n  function selector(selector) {\n    return function() {\n      return this.querySelector(selector);\n    };\n  }\n\n  function creatorInherit(name) {\n    return function() {\n      var document = this.ownerDocument,\n          uri = this.namespaceURI;\n      return uri && uri !== document.documentElement.namespaceURI\n          ? document.createElementNS(uri, name)\n          : document.createElement(name);\n    };\n  }\n\n  function creatorFixed(fullname) {\n    return function() {\n      return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n    };\n  }\n\n  function creator(name) {\n    var fullname = namespace(name);\n    return (fullname.local\n        ? creatorFixed\n        : creatorInherit)(fullname);\n  }\n\n  function append(create) {\n    return function() {\n      return this.appendChild(create.apply(this, arguments));\n    };\n  }\n\n  function insert(create, select) {\n    return function() {\n      return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n    };\n  }\n\n  function constantNull() {\n    return null;\n  }\n\n  function selection_append(name, before) {\n    var create = typeof name === \"function\" ? name : creator(name);\n    return this.select(arguments.length < 2\n        ? append(create)\n        : insert(create, before == null\n            ? constantNull : typeof before === \"function\"\n            ? before\n            : selector(before)));\n  }\n\n  function lower() {\n    this.parentNode.insertBefore(this, this.parentNode.firstChild);\n  }\n\n  function selection_lower() {\n    return this.each(lower);\n  }\n\n  function raise() {\n    this.parentNode.appendChild(this);\n  }\n\n  function selection_raise() {\n    return this.each(raise);\n  }\n\n  function htmlRemove() {\n    this.innerHTML = \"\";\n  }\n\n  function htmlConstant(value) {\n    return function() {\n      this.innerHTML = value;\n    };\n  }\n\n  function htmlFunction(value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    };\n  }\n\n  function selection_html(value) {\n    return arguments.length\n        ? this.each(value == null\n            ? htmlRemove : (typeof value === \"function\"\n            ? htmlFunction\n            : htmlConstant)(value))\n        : this.node().innerHTML;\n  }\n\n  function textRemove() {\n    this.textContent = \"\";\n  }\n\n  function textConstant(value) {\n    return function() {\n      this.textContent = value;\n    };\n  }\n\n  function textFunction(value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    };\n  }\n\n  function selection_text(value) {\n    return arguments.length\n        ? this.each(value == null\n            ? textRemove : (typeof value === \"function\"\n            ? textFunction\n            : textConstant)(value))\n        : this.node().textContent;\n  }\n\n  function classArray(string) {\n    return string.trim().split(/^|\\s+/);\n  }\n\n  function classList(node) {\n    return node.classList || new ClassList(node);\n  }\n\n  function ClassList(node) {\n    this._node = node;\n    this._names = classArray(node.getAttribute(\"class\") || \"\");\n  }\n\n  ClassList.prototype = {\n    add: function(name) {\n      var i = this._names.indexOf(name);\n      if (i < 0) {\n        this._names.push(name);\n        this._node.setAttribute(\"class\", this._names.join(\" \"));\n      }\n    },\n    remove: function(name) {\n      var i = this._names.indexOf(name);\n      if (i >= 0) {\n        this._names.splice(i, 1);\n        this._node.setAttribute(\"class\", this._names.join(\" \"));\n      }\n    },\n    contains: function(name) {\n      return this._names.indexOf(name) >= 0;\n    }\n  };\n\n  function classedAdd(node, names) {\n    var list = classList(node), i = -1, n = names.length;\n    while (++i < n) list.add(names[i]);\n  }\n\n  function classedRemove(node, names) {\n    var list = classList(node), i = -1, n = names.length;\n    while (++i < n) list.remove(names[i]);\n  }\n\n  function classedTrue(names) {\n    return function() {\n      classedAdd(this, names);\n    };\n  }\n\n  function classedFalse(names) {\n    return function() {\n      classedRemove(this, names);\n    };\n  }\n\n  function classedFunction(names, value) {\n    return function() {\n      (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n    };\n  }\n\n  function selection_classed(name, value) {\n    var names = classArray(name + \"\");\n\n    if (arguments.length < 2) {\n      var list = classList(this.node()), i = -1, n = names.length;\n      while (++i < n) if (!list.contains(names[i])) return false;\n      return true;\n    }\n\n    return this.each((typeof value === \"function\"\n        ? classedFunction : value\n        ? classedTrue\n        : classedFalse)(names, value));\n  }\n\n  function propertyRemove(name) {\n    return function() {\n      delete this[name];\n    };\n  }\n\n  function propertyConstant(name, value) {\n    return function() {\n      this[name] = value;\n    };\n  }\n\n  function propertyFunction(name, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) delete this[name];\n      else this[name] = v;\n    };\n  }\n\n  function selection_property(name, value) {\n    return arguments.length > 1\n        ? this.each((value == null\n            ? propertyRemove : typeof value === \"function\"\n            ? propertyFunction\n            : propertyConstant)(name, value))\n        : this.node()[name];\n  }\n\n  function styleRemove(name) {\n    return function() {\n      this.style.removeProperty(name);\n    };\n  }\n\n  function styleConstant(name, value, priority) {\n    return function() {\n      this.style.setProperty(name, value, priority);\n    };\n  }\n\n  function styleFunction(name, value, priority) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.style.removeProperty(name);\n      else this.style.setProperty(name, v, priority);\n    };\n  }\n\n  function selection_style(name, value, priority) {\n    var node;\n    return arguments.length > 1\n        ? this.each((value == null\n              ? styleRemove : typeof value === \"function\"\n              ? styleFunction\n              : styleConstant)(name, value, priority == null ? \"\" : priority))\n        : defaultView(node = this.node())\n            .getComputedStyle(node, null)\n            .getPropertyValue(name);\n  }\n\n  function attrRemove(name) {\n    return function() {\n      this.removeAttribute(name);\n    };\n  }\n\n  function attrRemoveNS(fullname) {\n    return function() {\n      this.removeAttributeNS(fullname.space, fullname.local);\n    };\n  }\n\n  function attrConstant(name, value) {\n    return function() {\n      this.setAttribute(name, value);\n    };\n  }\n\n  function attrConstantNS(fullname, value) {\n    return function() {\n      this.setAttributeNS(fullname.space, fullname.local, value);\n    };\n  }\n\n  function attrFunction(name, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.removeAttribute(name);\n      else this.setAttribute(name, v);\n    };\n  }\n\n  function attrFunctionNS(fullname, value) {\n    return function() {\n      var v = value.apply(this, arguments);\n      if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n      else this.setAttributeNS(fullname.space, fullname.local, v);\n    };\n  }\n\n  function selection_attr(name, value) {\n    var fullname = namespace(name);\n\n    if (arguments.length < 2) {\n      var node = this.node();\n      return fullname.local\n          ? node.getAttributeNS(fullname.space, fullname.local)\n          : node.getAttribute(fullname);\n    }\n\n    return this.each((value == null\n        ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n        ? (fullname.local ? attrFunctionNS : attrFunction)\n        : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n  }\n\n  function selection_each(callback) {\n\n    for (var groups = this._nodes, j = 0, m = groups.length; j < m; ++j) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n        if (node = group[i]) callback.call(node, node.__data__, i, group);\n      }\n    }\n\n    return this;\n  }\n\n  function selection_empty() {\n    return !this.node();\n  }\n\n  function selection_size() {\n    var size = 0;\n    this.each(function() { ++size; });\n    return size;\n  }\n\n  function selection_node() {\n\n    for (var groups = this._nodes, j = 0, m = groups.length; j < m; ++j) {\n      for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n\n    return null;\n  }\n\n  function selection_nodes() {\n    var nodes = new Array(this.size()), i = -1;\n    this.each(function() { nodes[++i] = this; });\n    return nodes;\n  }\n\n  function selection_call() {\n    var callback = arguments[0];\n    arguments[0] = this;\n    callback.apply(null, arguments);\n    return this;\n  }\n\n  function arrayify(selection) {\n\n    for (var groups = selection._nodes, j = 0, m = groups.length; j < m; ++j) {\n      if (!Array.isArray(group = groups[j])) {\n        for (var n = group.length, array = groups[j] = new Array(n), group, i = 0; i < n; ++i) {\n          array[i] = group[i];\n        }\n      }\n    }\n\n    return groups;\n  }\n\n  function selection_sort(compare) {\n    if (!compare) compare = ascending;\n\n    function compareNode(a, b) {\n      return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n    }\n\n    for (var groups = arrayify(this), j = 0, m = groups.length; j < m; ++j) {\n      groups[j].sort(compareNode);\n    }\n\n    return this.order();\n  }\n\n  function ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function selection_order() {\n\n    for (var groups = this._nodes, j = -1, m = groups.length; ++j < m;) {\n      for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function sparse(update) {\n    return new Array(update.length);\n  }\n\n  function selection_exit() {\n    var exit = this._exit;\n    if (exit) return this._exit = null, exit;\n    return new Selection(this._nodes.map(sparse), this._parents);\n  }\n\n  function selection_enter() {\n    var enter = this._enter;\n    if (enter) return this._enter = null, enter;\n    enter = new Selection(this._nodes.map(sparse), this._parents);\n    enter._update = this;\n    return enter;\n  }\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  var keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\n  function bindIndex(parent, update, enter, exit, data) {\n    var i = 0,\n        node,\n        nodeLength = update.length,\n        dataLength = data.length,\n        minLength = Math.min(nodeLength, dataLength);\n\n    // Clear the enter and exit arrays, and then initialize to the new length.\n    enter.length = 0, enter.length = dataLength;\n    exit.length = 0, exit.length = nodeLength;\n\n    for (; i < minLength; ++i) {\n      if (node = update[i]) {\n        node.__data__ = data[i];\n      } else {\n        enter[i] = new EnterNode(parent, data[i]);\n      }\n    }\n\n    // Note: we don’t need to delete update[i] here because this loop only\n    // runs when the data length is greater than the node length.\n    for (; i < dataLength; ++i) {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n\n    // Note: and, we don’t need to delete update[i] here because immediately\n    // following this loop we set the update length to data length.\n    for (; i < nodeLength; ++i) {\n      if (node = update[i]) {\n        exit[i] = update[i];\n      }\n    }\n\n    update.length = dataLength;\n  }\n\n  function bindKey(parent, update, enter, exit, data, key) {\n    var i,\n        node,\n        dataLength = data.length,\n        nodeLength = update.length,\n        nodeByKeyValue = {},\n        keyValues = new Array(nodeLength),\n        keyValue;\n\n    // Clear the enter and exit arrays, and then initialize to the new length.\n    enter.length = 0, enter.length = dataLength;\n    exit.length = 0, exit.length = nodeLength;\n\n    // Compute the keys for each node.\n    for (i = 0; i < nodeLength; ++i) {\n      if (node = update[i]) {\n        keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, update);\n\n        // Is this a duplicate of a key we’ve previously seen?\n        // If so, this node is moved to the exit selection.\n        if (nodeByKeyValue[keyValue]) {\n          exit[i] = node;\n        }\n\n        // Otherwise, record the mapping from key to node.\n        else {\n          nodeByKeyValue[keyValue] = node;\n        }\n      }\n    }\n\n    // Now clear the update array and initialize to the new length.\n    update.length = 0, update.length = dataLength;\n\n    // Compute the keys for each datum.\n    for (i = 0; i < dataLength; ++i) {\n      keyValue = keyPrefix + key.call(parent, data[i], i, data);\n\n      // Is there a node associated with this key?\n      // If not, this datum is added to the enter selection.\n      if (!(node = nodeByKeyValue[keyValue])) {\n        enter[i] = new EnterNode(parent, data[i]);\n      }\n\n      // Did we already bind a node using this key? (Or is a duplicate?)\n      // If unique, the node and datum are joined in the update selection.\n      // Otherwise, the datum is ignored, neither entering nor exiting.\n      else if (node !== true) {\n        update[i] = node;\n        node.__data__ = data[i];\n      }\n\n      // Record that we consumed this key, either to enter or update.\n      nodeByKeyValue[keyValue] = true;\n    }\n\n    // Take any remaining nodes that were not bound to data,\n    // and place them in the exit selection.\n    for (i = 0; i < nodeLength; ++i) {\n      if ((node = nodeByKeyValue[keyValues[i]]) !== true) {\n        exit[i] = node;\n      }\n    }\n  }\n\n  function selection_data(value, key) {\n    if (!value) {\n      var data = new Array(this.size()), i = -1;\n      this.each(function(d) { data[++i] = d; });\n      return data;\n    }\n\n    var bind = key ? bindKey : bindIndex,\n        parents = this._parents,\n        update = arrayify(this),\n        enter = (this._enter = this.enter())._nodes,\n        exit = (this._exit = this.exit())._nodes;\n\n    if (typeof value !== \"function\") value = constant(value);\n\n    for (var m = update.length, j = 0; j < m; ++j) {\n      var group = update[j],\n          parent = parents[j];\n\n      bind(parent, group, enter[j], exit[j], value.call(parent, parent && parent.__data__, j, parents), key);\n\n      // Now connect the enter nodes to their following update node, such that\n      // appendChild can insert the materialized enter node before this node,\n      // rather than at the end of the parent node.\n      for (var n = group.length, i0 = 0, i1 = 0, previous, next; i0 < n; ++i0) {\n        if (previous = enter[j][i0]) {\n          if (i0 >= i1) i1 = i0 + 1;\n          while (!(next = group[i1]) && ++i1 < n);\n          previous._next = next || null;\n        }\n      }\n    }\n\n    return this;\n  }\n\n  function EnterNode(parent, datum) {\n    this.ownerDocument = parent.ownerDocument;\n    this.namespaceURI = parent.namespaceURI;\n    this._next = null;\n    this._parent = parent;\n    this.__data__ = datum;\n  }\n\n  EnterNode.prototype = {\n    appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n    insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n    querySelector: function(selector) { return this._parent.querySelector(selector); },\n    querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n  };\n\n  var matcher = function(selector) {\n    return function() {\n      return this.matches(selector);\n    };\n  };\n\n  if (typeof document !== \"undefined\") {\n    var element$1 = document.documentElement;\n    if (!element$1.matches) {\n      var vendorMatches = element$1.webkitMatchesSelector\n          || element$1.msMatchesSelector\n          || element$1.mozMatchesSelector\n          || element$1.oMatchesSelector;\n      matcher = function(selector) {\n        return function() {\n          return vendorMatches.call(this, selector);\n        };\n      };\n    }\n  }\n\n  var matcher$1 = matcher;\n\n  function selection_filter(match) {\n    if (typeof match !== \"function\") match = matcher$1(match);\n\n    for (var groups = this._nodes, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n        if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n          subgroup.push(node);\n        }\n      }\n    }\n\n    return new Selection(subgroups, this._parents);\n  }\n\n  function selectorAll(selector) {\n    return function() {\n      return this.querySelectorAll(selector);\n    };\n  }\n\n  function selection_selectAll(select) {\n    if (typeof select !== \"function\") select = selectorAll(select);\n\n    for (var groups = this._nodes, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n        if (node = group[i]) {\n          subgroups.push(select.call(node, node.__data__, i, group));\n          parents.push(node);\n        }\n      }\n    }\n\n    return new Selection(subgroups, parents);\n  }\n\n  function selection_select(select) {\n    if (typeof select !== \"function\") select = selector(select);\n\n    for (var groups = this._nodes, update = this._update, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n      for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n        if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          if (update) update._nodes[j][i] = subnode;\n          subgroup[i] = subnode;\n        }\n      }\n    }\n\n    return new Selection(subgroups, this._parents);\n  }\n\n  var root = [null];\n\n  function Selection(nodes, parents) {\n    this._nodes = nodes;\n    this._parents = parents;\n  }\n\n  function selection() {\n    return new Selection([[document.documentElement]], root);\n  }\n\n  Selection.prototype = selection.prototype = {\n    select: selection_select,\n    selectAll: selection_selectAll,\n    filter: selection_filter,\n    data: selection_data,\n    enter: selection_enter,\n    exit: selection_exit,\n    order: selection_order,\n    sort: selection_sort,\n    call: selection_call,\n    nodes: selection_nodes,\n    node: selection_node,\n    size: selection_size,\n    empty: selection_empty,\n    each: selection_each,\n    attr: selection_attr,\n    style: selection_style,\n    property: selection_property,\n    classed: selection_classed,\n    text: selection_text,\n    html: selection_html,\n    raise: selection_raise,\n    lower: selection_lower,\n    append: selection_append,\n    remove: selection_remove,\n    datum: selection_datum,\n    on: selection_on,\n    dispatch: selection_dispatch\n  };\n\n  function select(selector) {\n    return typeof selector === \"string\"\n        ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n        : new Selection([[selector]], root);\n  }\n\n  var bug44083 = typeof navigator !== \"undefined\" && /WebKit/.test(navigator.userAgent) ? -1 : 0; // https://bugs.webkit.org/show_bug.cgi?id=44083\n\n  function point(node, event) {\n    var svg = node.ownerSVGElement || node;\n\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n\n      if (bug44083 < 0) {\n        var window = defaultView(node);\n        if (window.scrollX || window.scrollY) {\n          svg = select(window.document.body).append(\"svg\").style({position: \"absolute\", top: 0, left: 0, margin: 0, padding: 0, border: \"none\"}, \"important\");\n          var ctm = svg.node().getScreenCTM();\n          bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n\n      if (bug44083) point.x = event.pageX, point.y = event.pageY;\n      else point.x = event.clientX, point.y = event.clientY;\n\n      point = point.matrixTransform(node.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n\n    var rect = node.getBoundingClientRect();\n    return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n  }\n\n  function mouse(node, event) {\n    if (event == null) event = sourceEvent();\n    if (event.changedTouches) event = event.changedTouches[0];\n    return point(node, event);\n  }\n\n  function selectAll(selector) {\n    return typeof selector === \"string\"\n        ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n        : new Selection([selector], root);\n  }\n\n  function touch(node, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n    for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return point(node, touch);\n      }\n    }\n\n    return null;\n  }\n\n  function touches(node, touches) {\n    if (touches == null) touches = sourceEvent().touches;\n\n    for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n      points[i] = point(node, touches[i]);\n    }\n\n    return points;\n  }\n\n  var version = \"0.6.3\";\n\n  exports.version = version;\n  exports.mouse = mouse;\n  exports.namespace = namespace;\n  exports.namespaces = namespaces;\n  exports.select = select;\n  exports.selectAll = selectAll;\n  exports.selection = selection;\n  exports.touch = touch;\n  exports.touches = touches;\n\n}));\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/d3-selection/build/d3-selection.js\n ** module id = 3\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/d3-selection/build/d3-selection.js?");

/***/ }
/******/ ]);